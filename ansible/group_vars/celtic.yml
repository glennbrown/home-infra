---

# Default ssh port to use
ansible_ssh_port: "{{ cloud_ssh_port }}"

# apt-mirror
apt_source_mode: modern

# Bash Aliases
bash_docker: true
bash_apt: true
bash_systemctl: true

# geerlingguy.ntp
ntp_daemon: ntp
ntp_package: ntp
ntp_timezone: "America/New_York"

#Tailscale
tailscale_args: "--accept-routes"
tailscale_authkey: "{{ tailscale_oci_authkey }}"

# geerlingguy.security
security_ssh_permit_root_login: "no"
security_ssh_password_authentication: "no"
security_ssh_usedns: "no"
security_autoupdate_enabled: true
security_fail2ban_enabled: true
security_ssh_port: "{{ cloud_ssh_port }}"
security_sudoers_passwordless:
 - "{{ main_username }}"

# firewall rules
ufw:
  - comment: 'SSH VPS Port'
    rule: 'allow'
    port: '{{ cloud_ssh_port }}'
    proto: 'any'
    route: 'no'
  - comment: 'HTTP Traffic'
    rule: 'allow'
    port: '80'
    proto: 'tcp'
    route: 'no'
  - comment: 'HTTPS Traffic'
    rule: 'allow'
    port: '443'
    proto: 'tcp'
    route: 'no'
  - comment: 'tailscale adapter'
    rule: 'allow'
    interface: tailscale0
    direction: in
    proto: 'any'
    route: 'no'
  
# certbot
certbot_install_method: snap
certbot_admin_email: "{{ cloudflare_account_email }}"
certbot_cloudlare_api_token: "{{ cloudflare_certbot_api_token }}"
certbot_certs:
  - domains:
      - "{{ public_domain_1 }}"
      - "*.{{ public_domain_1 }}"
  - domains:
      - "{{ public_domain_2 }}"
      - "*.{{ public_domain_2 }}"

# Nginx
#nginx_docker_sites:
#  - server_name: "freshrss.{{ public_domain_1 }}"
#    upstream: "http://freshrss.docker"
#    ssl_certificate: "/etc/letsencrypt/live/{{ public_domain_1 }}/fullchain.pem"
#    ssl_key: "/etc/letsencrypt/live/{{ public_domain_1 }}/privkey.pem"
#    ssl_chain: "/etc/letsencrypt/live/{{ public_domain_1 }}/chain.pem"
#  - server_name: "requests.{{ public_domain_1 }}"
#    upstream: "http://overseerr.docker:5055"
#    ssl_certificate: "/etc/letsencrypt/live/{{ public_domain_1 }}/fullchain.pem"
#    ssl_key: "/etc/letsencrypt/live/{{ public_domain_1 }}/privkey.pem"
#    ssl_chain: "/etc/letsencrypt/live/{{ public_domain_1 }}/chain.pem"
nginx_proxy_sites:
  - server_name: "freshrss.{{ public_domain_1 }}"
    upstream: "http://{{ nginx_private_ip }}:8080"
    ssl_certificate: "/etc/letsencrypt/live/{{ public_domain_1 }}/fullchain.pem"
    ssl_key: "/etc/letsencrypt/live/{{ public_domain_1 }}/privkey.pem"
    ssl_chain: "/etc/letsencrypt/live/{{ public_domain_1 }}/chain.pem"
  - server_name: "requests.{{ public_domain_1 }}"
    upstream: "http://{{ nginx_private_ip }}:5055"
    ssl_certificate: "/etc/letsencrypt/live/{{ public_domain_1 }}/fullchain.pem"
    ssl_key: "/etc/letsencrypt/live/{{ public_domain_1 }}/privkey.pem"
    ssl_chain: "/etc/letsencrypt/live/{{ public_domain_1 }}/chain.pem"

# ZNC
znc_user: "{{ main_username }}"
znc_group: "{{ main_groupname }}"
znc_config_root: "{{ appdata_path }}/znc"

# ironicbadger.docker_compose_generator
global_env_vars:
  - TZ={{ ntp_timezone }}
  - PUID={{ main_uid }}
  - PGID={{ main_gid }}
appdata_path: "/home/{{ main_username }}/appdata"
container_config_path: /config

container_networks:
  ###
  - network_name: nginx
    active: true

containers:
  ###
  - service_name: overseerr
    active: true
    image: lscr.io/linuxserver/overseerr:1.33.2
    container_name: overseerr
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/overseerr:/config"
    ports:
      - 5055:5055
    networks:
      - nginx 
    restart: unless-stopped
  ###
  - service_name: freshrss
    active: true
    image: freshrss/freshrss:1.24.1-alpine
    container_name: freshrss
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
      - CRON_MIN=1,31
    volumes:
      - "{{ appdata_path }}/freshrss/data:/var/www/FreshRSS/data"
      - "{{ appdata_path }}/freshrss/extensions:/var/www/FreshRSS/extensions"
    ports:
      - 8080:80
    networks:
      - nginx
    restart: unless-stopped
  ###
  - service_name: soju
    active: false
    image: ghcr.io/glennbrown/soju:0.8.1
    container_name: soju
    hostname: soju.{{ public_domain_1 }}
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ~/.config/soju:/var/lib/soju:Z
      - ~/.local/share/soju/logs:/var/lib/soju/logs:Z
      - ~/.local/share/soju/uploads:/home/soju/uploads:Z
      - /etc/letsencrypt/live/{{ public_domain_1 }}/fullchain.pem:/etc/ssl/certs/soju/soju.crt:ro
      - /etc/letsencrypt/live/{{ public_domain_1 }}/privkey.pem:/etc/ssl/certs/soju/soju.key:ro
    ports:
      - 46697:6697
    restart: unless-stopped
  ###
  - service_name: znc
    active: false
    image: znc:1.9.1
    container_name: znc
    user: "{{ main_uid }}:{{ main_gid }}"
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
    volumes:
      - "{{ appdata_path }}/znc:/znc-data"
    ports:
      - 46697:6502
    restart: unless-stopped
