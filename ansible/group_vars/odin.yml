---

target_os: proxmox #proxmox
set_hostname: odin

# geerlingguy.ntp
ntp_daemon: chrony
ntp_package: chrony

bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "drm", command: "docker rm `docker ps -aq`" }
  - { alias: "dcp", command: "docker compose -f ~/docker-compose.yml " }
  - { alias: "dcporph", command: "docker compose -f ~/docker-compose.yml --remove-orphans " }
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all"}
  - { alias: "ctop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop " }
  
# grog.package
package_list_group:
  - name: btrfs-progs
  - name: curl
  - name: diceware
  - name: fio
  - name: fwupd
  - name: hddtemp
  - name: iperf3
  - name: ffmpeg
  - name: intel-gpu-tools
  - name: intel-microcode
  - name: lm-sensors
  - name: mutt
  - name: nfs-kernel-server
  - name: nmap
  - name: nvme-cli
  - name: smartmontools
  - name: wget
  - name: xfsprogs
  - name: zfsutils-linux

# grog.group
group_list_group:
  - { name: kbrown, gid: 1001, state: present }
  - { name: prometheus, gid: 180, state: present }

# grog.user
user_list_group:
  - name: kbrown
    uid: 1001
    group: kbrown
    groups:
      - users
    append: yes
    shell: /bin/false
    comment: "Kristen Brown"
    state: present
  - name: dockeruser
    uid: 99
    group: users
    shell: /bin/bash
    append: yes
    groups: 
      - video
  - name: prometheus
    group: prometheus
    uid: 180
    shell: /usr/sbin/nologin
    home: /
    comment: "Prometheus daemon"
    append: false
    state: present

# odin
# TODO: change secret to 1password lookup
odin_main_storage_path: /mnt/storage
extra_mountpoints:
  - { path: /mnt/nvme1tb, diskbyid: /dev/disk/by-id/nvme-WDBRPG0010BNC-WRSN_21500K802847-part1, fs: ext4, opts: "defaults,discard" }
samba_users:
  - username: "{{ main_username }}"
    password: "{{ secret_samba_gbrown }}"
  - username: kbrown
    password: "{{ secret_samba_kbrown }}"

# ironicbadger.snapraid + kgb-odin
snapraid_runner: true
snapraid_install: true
snapraid_install_mode: package_manager
snapraid_bin_path: /usr/bin/snapraid
snapraid_parity_disks:
  - { path: /mnt/parity1, diskbyid: /dev/disk/by-id/ata-WDC_WD120EDAZ-11F3RA0_5PJGZA3D-part1, fs: xfs, opts: defaults, content: false }

snapraid_data_disks:
  - { path: /mnt/disk1, diskbyid: /dev/disk/by-id/ata-WDC_WD120EDAZ-11F3RA0_5PJGRG9D-part1, fs: xfs, opts: defaults, content: true }
  - { path: /mnt/disk2, diskbyid: /dev/disk/by-id/ata-WDC_WD100EMAZ-00WJTA0_JEJUB8YZ-part1, fs: xfs, opts: defaults, content: false }
  - { path: /mnt/disk3, diskbyid: /dev/disk/by-id/ata-WDC_WD100EMAZ-00WJTA0_JEK67U5N-part1, fs: xfs, opts: defaults, content: false }
  - { path: /mnt/disk99, diskbyid: /dev/disk/by-id/ata-WDC_WD10EZEX-08WN4A0_WD-WCC6Y3RK0N3F-part1, fs: ext4, opts: defaults, content: false }

snapraid_config_excludes:
  - "*.unrecoverable"
  - "/tmp/"
  - "/lost+found/"
  - "downloads/"
  - "appdata/"
  - "*.!sync"
  - ".AppleDouble"
  - "._AppleDouble"
  - ".DS_Store"
  - "._.DS_Store"
  - ".Thumbs.db"
  - ".fseventsd"
  - ".Spotlight-V100"
  - ".TemporaryItems"
  - ".Trashes"
  - ".AppleDB"
  - ".nfo"

# tigattack.mergerfs
mergerfs_install_mode: github_releases
mergerfs_version: 2.38.0
mergerfs_mounts:
  - path: /mnt/storage
    branches: 
      - /mnt/disk*
      - /mnt/nvme1tb
      - /mnt/tank/fuse
    options: "defaults,nonempty,allow_other,use_ino,moveonenospc=true,category.create=epmfs,dropcacheonclose=true,minfreespace=250G,fsname=mergerfs"
  - path: /mnt/jbod
    branches:
      - /mnt/disk*
    options: "defaults,nonempty,allow_other,use_ino,moveonenospc=true,category.create=epmfs,dropcacheonclose=true,minfreespace=250G,fsname=jbod"

# geerlingguy.nfs
nfs_exports: [ "/mnt/storage    *(rw,sync,no_root_squash,fsid=25)" ]

# traefik
traefik_enable_dashboard: true
traefik_insecure_transport: true
traefik_exposed_by_default: true
traefik_docker_provider: true
traefik_acme: true
traefik_file_providers:
  - name: 'proxmox-rules.yml'
traefik_domains:
  - name: "{{ local_domain }}"
    sans: "*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"
  - name: "{{ public_domain_1 }}"
    sans: "*.{{ public_domain_1 }}"

#Plex Info
plex_server_address: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          33653934356539633465646339613930303938646335663139323837396334616161666166343161
          3734323933343736623139396439343039303966396338330a313439316533336466303764623162
          66623939376334363036333230323730323332393065346564386266663165346162646232633036
          3963643461353366330a373763353533333162316634323365353562316563323633326236366138
          65386366393238616230636136633732376166373466616236366561346464326330643636373230
          35626130383963666234393932666261353165316233623331333034373732366239343531613237
          35333862623535316539323863396162653134386133313536393064666461373533316530363139
          33326638633237633030
plex_claim_token: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32336431323436303538356632316366333733653836396362666164323832383362636262613132
          3537376536613266343165313334626431326462323436350a363061656162303030323264336535
          64666630356235363133626632353061623561363264393933653466356333306537353634393731
          3163663765623539610a373830623135353534613631666137646165323935356166363431303334
          33386337373630343432323533303664356432666261343265613135653236656464
plex_auth_token: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65353466336334353332333066636137336332376636306533393665633133313963346363623239
          3038356138323935613231316133353035306234623134650a303162306166353933386130653031
          30393261303261633730636336346638326236336334373161336661326135343339633763383834
          6631333737343765340a626534346231633965363265303034313365663263623639386666653661
          36356638383932313866626664333864616662653036346635636532316135326433
          
# ironicbadger.docker_compose_generator
appdata_path: /mnt/nvme1tb/appdata
storage_path: /mnt/storage
download_path: "{{ storage_path }}/downloads"
container_config_path: /config

containers:
  ###
  - service_name: traefik
    active: true
    image: traefik:v2.11.0
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
      - CF_DNS_API_TOKEN={{ cloudflare_traefik_api_token }}
    volumes:
      - "{{ appdata_path }}/traefik:/etc/traefik"
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    network_mode: bridge
    extra_hosts:
      - '"host.docker.internal:172.17.0.1"'
    restart: unless-stopped
    labels:
      - '"traefik.http.routers.dashboard.rule=Host(`traefik.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.dashboard.entrypoints=websecure"'
      - '"traefik.http.routers.dashboard.service=api@internal"'
      - '"traefik.http.routers.dashboard.middlewares=auth"'
      - '"traefik.http.routers.dashboard.tls=true"'
      - '"traefik.http.routers.dashboard.tls.certresolver=default"'
      - '"traefik.http.middlewares.auth.basicauth.users={{ traefik_dashboard_auth }}"'
  ###
  - service_name: plex
    active: true
    image: plexinc/pms-docker:1.40.0.7998-c29d4c0c8
    container_name: plex
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
      - "PLEX_CLAIM={{ plex_claim_token }}"
      - PLEX_UID=99
      - PLEX_GID=100
    volumes:
      - "{{ appdata_path }}/plexmediaserver:{{ container_config_path }}"
      - "{{ storage_path }}/TV Shows:/tv:ro"
      - "{{ storage_path }}/Movies:/movies:ro"
    tmpfs:
      - /transcode:size=32G,mode=0777
    devices:
      - /dev/dri:/dev/dri
    network_mode: host
    restart: unless-stopped
  ###
  - service_name: tautulli
    active: true
    image: tautulli/tautulli:v2.13.4
    container_name: tautulli
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/tautulli:{{ container_config_path }}"
    network_mode: bridge
    restart: unless-stopped
    depends_on:
      - plex
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.tautulli.rule=Host(`tautulli.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.tautulli.entrypoints=websecure"'
      - '"traefik.http.routers.tautulli.tls=true"'
      - '"traefik.http.routers.tautulli.tls.certresolver=default"'
  ###
  - service_name: jellyfin
    active: false
    image: jellyfin/jellyfin:10.8.13
    container_name: jellyfin
    user: 99:100
    environment:
      - TZ={{ ntp_timezone }}
      - "JELLYFIN_PublishedServerUrl=https://jellyfin.{{ ansible_hostname[0] }}.{{ local_domain }}"
    volumes:
      - "{{ appdata_path }}/jellyfin/config:/config"
      - "{{ appdata_path }}/jellyfin/cache:/cache"
      - "{{ storage_path }}/TV Shows:/media/tv:ro"
      - "{{ storage_path }}/Movies:/media/movies:ro"
    tmpfs:
      - /transcode:size=32G,mode=0777
    devices:
      - /dev/dri:/dev/dri
    network_mode: host
    restart: unless-stopped
    extra_hosts:
      - '"host.docker.internal:host-gateway"'
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.jellyfin.rule=Host(`jellyfin.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.jellyfin.entrypoints=websecure"'
      - '"traefik.http.routers.jellyfin.tls=true"'
      - '"traefik.http.routers.jellyfin.tls.certresolver=default"'
      - '"traefik.http.services.jellyfin.loadbalancer.server.port=8096"'
  ###
  - service_name: sabnzbd
    active: true
    image: lscr.io/linuxserver/sabnzbd:4.2.2
    container_name: sabnzbd
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/sabnzbd:{{ container_config_path }}"
      - "{{ download_path }}:/downloads"
    network_mode: bridge
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.sabnzbd.rule=Host(`sabnzb.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.sabnzbd.entrypoints=websecure"'
      - '"traefik.http.routers.sabnzbd.tls=true"'
      - '"traefik.http.routers.sabnzbd.tls.certresolver=default"'
  ###
  - service_name: qbittorrent
    active: true
    image: lscr.io/linuxserver/qbittorrent:4.6.3
    container_name: qbittorrent
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/qbittorrent:{{ container_config_path }}"
      - "{{ download_path }}:/downloads"
    ports:
      - 6881:6881
      - 6881:6881/udp
    network_mode: bridge
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.qbittorrent.rule=Host(`qb.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.qbittorrent.entrypoints=websecure"'
      - '"traefik.http.routers.qbittorrent.tls=true"'
      - '"traefik.http.routers.qbittorrent.tls.certresolver=default"'
      - '"traefik.http.services.qbittorrent.loadbalancer.server.port=8080"'
  ###
  - service_name: prowlarr
    active: true
    image: lscr.io/linuxserver/prowlarr:1.13.3
    container_name: prowlarr
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/prowlarr:{{ container_config_path }}"
    network_mode: bridge
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.prowlarr.rule=Host(`prowlarr.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.prowlarr.entrypoints=websecure"'
      - '"traefik.http.routers.prowlarr.tls=true"'
      - '"traefik.http.routers.prowlarr.tls.certresolver=default"'
  ###
  - service_name: sonarr
    active: true
    image: lscr.io/linuxserver/sonarr:4.0.2
    container_name: sonarr
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/sonarr:{{ container_config_path }}"
      - "{{ download_path }}:/downloads"
      - "{{ storage_path }}/TV Shows:/tv"
    network_mode: bridge
    restart: unless-stopped
    depends_on:
      - sabnzbd
      - qbittorrent
      - prowlarr
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.sonarr.rule=Host(`sonarr.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.sonarr.entrypoints=websecure"'
      - '"traefik.http.routers.sonarr.tls=true"'
      - '"traefik.http.routers.sonarr.tls.certresolver=default"'
  ###
  - service_name: radarr
    active: true
    image: lscr.io/linuxserver/radarr:5.3.6
    container_name: radarr
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/radarr:{{ container_config_path }}"
      - "{{ download_path }}:/downloads"
      - "{{ storage_path }}/Movies:/movies"
    network_mode: bridge
    restart: unless-stopped
    depends_on:
      - sabnzbd
      - prowlarr
      - qbittorrent
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.radarr.rule=Host(`radarr.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.radarr.entrypoints=websecure"'
      - '"traefik.http.routers.radarr.tls=true"'
      - '"traefik.http.routers.radarr.tls.certresolver=default"'
  ###
  - service_name: speedtest-tracker
    active: true
    image: ghcr.io/alexjustesen/speedtest-tracker:v0.18.2
    container_name: speedtest-tracker
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/speedtest-tracker:{{ container_config_path }}"
    network_mode: bridge
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.speedtest-tracker.rule=Host(`speedtest-tracker.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.speedtest-tracker.tls=true"'
      - '"traefik.http.routers.speedtest-tracker.entrypoints=websecure"'
      - '"traefik.http.routers.speedtest-tracker.tls.certresolver=default"'
  ###
  - service_name: prometheus
    active: true
    image: prom/prometheus:v2.50.1
    container_name: prometheus
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
    volumes:
      - "{{ appdata_path }}/prometheus/data:/prometheus"
      - "{{ appdata_path }}/prometheus/etc:/etc/prometheus"
    network_mode: bridge
    command:
      - "'--storage.tsdb.retention.time=1y'"
      - "'--config.file=/etc/prometheus/prometheus.yml'"
      - "'--storage.tsdb.path=/prometheus'"
      - "'--web.enable-admin-api'"
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.prometheus.rule=Host(`prometheus.{{ local_domain }}`)"'
      - '"traefik.http.routers.prometheus.entrypoints=websecure"'
      - '"traefik.http.routers.prometheus.tls=true"'
      - '"traefik.http.routers.prometheus.tls.certresolver=default"'
  ###
  - service_name: influxdb
    active: true
    image: influxdb:1.8.10-alpine
    container_name: influxdb
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
    volumes:
      - "{{ appdata_path }}/influxdb:/var/lib/influxdb"
    network_mode: bridge
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.influxdb.rule=Host(`influxdb.{{ local_domain }}`)"'
      - '"traefik.http.routers.influxdb.entrypoints=websecure"'
      - '"traefik.http.routers.influxdb.tls=true"'
      - '"traefik.http.routers.influxdb.tls.certresolver=default"'
  ###
  - service_name: telegraf
    active: true
    image: telegraf:1.29.5-alpine
    container_name: telegraf
    cap_add:
      - NET_RAW
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
      - HOST_MOUNT_PREFIX=/rootfs
      - HOST_ETC=/rootfs/etc
      - HOST_SYS=/rootfs/sys
      - HOST_PROC=/rootfs/proc
      - HOST_VAR=/rootfs/var
      - HOST_RUN=/rootfs/run
    volumes:
      - "{{ appdata_path }}/telegraf:/etc/telegraf:ro"
      - /:/rootfs:ro
    network_mode: host
    restart: unless-stopped
  ###
  - service_name: cadvisor
    active: true
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    ports:
      - 9099:9099
    network_mode: bridge
    command: '-port 9099'
    restart: unless-stopped
  ###
  - service_name: moto-exporter
    active: true
    image: ghcr.io/jahkeup/prometheus-moto-exporter:main
    container_name: moto-exporter
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
      - "MOTO_PASSWORD={{ modem_secret }}"
    ports:
      - 9731:9731
    network_mode: bridge
    restart: unless-stopped
  ###
  - service_name: varken
    active: true
    image: boerderij/varken:1.7.7
    container_name: varken
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
    volumes:
      - "{{ appdata_path }}/varken:{{ container_config_path }}"
    network_mode: bridge
    restart: unless-stopped
  ###
  - service_name: grafana
    active: true
    image: grafana/grafana-oss:10.3.3
    container_name: grafana
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
      - "GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-singlestat-panel,grafana-worldmap-panel,marcusolsson-json-datasource,dalvany-image-panel,grafana-clock-panel,grafana-simple-json-datasource"
      - "GF_SECURITY_ADMIN_PASSWORD={{ grafana_secret }}"
      - "GF_SERVER_ROOT_URL=https://grafana.o.{{ local_domain }}"
    volumes:
      - "{{ appdata_path }}/grafana:/var/lib/grafana"
    network_mode: bridge
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.grafana.rule=Host(`grafana.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.grafana.tls=true"'
      - '"traefik.http.routers.grafana.entrypoints=websecure"'
      - '"traefik.http.routers.grafana.tls.certresolver=default"'
  ###
  - service_name: py-kms
    active: true
    image: ghcr.io/py-kms-organization/py-kms:latest
    container_name: py-kms
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
    volumes:
      - "{{ appdata_path }}/py-kms/db:/home/py-kms/db"
      - /etc/localtime:/etc/localtime
    ports:
      - 1688:1688
    network_mode: bridge
    restart: unless-stopped
  ###
  - service_name: prometheus-plex-exporter
    active: true
    image: ghcr.io/jsclayton/prometheus-plex-exporter
    container_name: prometheus-plex-exporter
    environment:
      - "TZ={{ ntp_timezone }}"
      - "PLEX_SERVER={{ plex_server_address }}"
      - "PLEX_TOKEN={{ plex_auth_token }}"
    ports:
      - 9000:9000
    network_mode: bridge
    restart: unless-stopped
  ###
  - service_name: librespeed
    active: true
    image: lscr.io/linuxserver/librespeed:5.3.0
    container_name: librespeed
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/librespeed:{{ container_config_path }}"
    network_mode: bridge
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.librespeed.rule=Host(`librespeed.o.{{ local_domain }}`)"'
      - '"traefik.http.routers.librespeed.entrypoints=websecure"'
      - '"traefik.http.routers.librespeed.tls=true"'
      - '"traefik.http.routers.librespeed.tls.certresolver=default"'
