---

- name: check if ssl cert file is there
  ansible.builtin.stat:
    path: "{{ znc_ssl_certfile }}"
  register: znc_sslcert_status

- name: gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: set znc version
  ansible.builtin.set_fact:
    znc_version: "{{ ansible_facts.packages['znc'].0.version | regex_replace('-.*$', '') }}"
  when: "'znc' in ansible_facts.packages"

- name: ensure znc config directory exists
  ansible.builtin.file:
    path: "{{ znc_config_root }}/configs"
    state: directory
    owner: "{{ znc_user }}"
    group: "{{ znc_group }}"
    mode: 0700

# Create self signed cert, but this will get replaced
- name: create self signed cert
  ansible.builtin.command: /usr/bin/znc -d {{ znc_config_root}} --makepem
  args:
    creates: "{{ znc_config_root }}/znc.pem"
  become: true
  become_user: "{{ znc_user }}"
  when: not znc_sslcert_status.stat.exists
  
- name: copy znc configuration file
  ansible.builtin.template:
    src: znc.conf.j2
    dest: "{{ znc_config_root }}/configs/znc.conf"
    owner: "{{ znc_user }}"
    group: "{{ znc_group }}"
    mode: 0600
  notify: restart znc

# Replace stock znc service unit file
- name: znc systemd unit file
  ansible.builtin.template:
    src: znc.service.j2
    dest: /lib/systemd/system/znc.service
    mode: 0644
  notify: restart znc

- name: enable systemd service
  ansible.builtin.systemd:
    name: znc.service
    daemon_reload: true
    enabled: true
