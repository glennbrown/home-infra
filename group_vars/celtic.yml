---

# Default ssh port to use
ansible_ssh_port: "{{ cloud_ssh_port }}"

# apt-mirror
apt_source_mode: modern

# Bash Aliases
bash_docker: true
bash_apt: true
bash_systemctl: true

# geerlingguy.ntp
ntp_daemon: ntp
ntp_package: ntp
ntp_timezone: "America/New_York"

#Tailscale
tailscale_args: "--accept-routes"
tailscale_authkey: "{{ tailscale_oci_authkey }}"

# geerlingguy.security
security_ssh_permit_root_login: "no"
security_ssh_password_authentication: "no"
security_ssh_usedns: "no"
security_autoupdate_enabled: true
security_fail2ban_enabled: true
security_ssh_port: "{{ cloud_ssh_port }}"
security_sudoers_passwordless:
 - "{{ main_username }}"

# firewall rules
ufw:
  - comment: 'SSH VPS Port'
    rule: 'allow'
    port: '{{ cloud_ssh_port }}'
    proto: 'any'
    route: 'no'
  - comment: 'HTTP Traffic'
    rule: 'allow'
    port: '80'
    proto: 'tcp'
    route: 'no'
  - comment: 'HTTPS Traffic'
    rule: 'allow'
    port: '443'
    proto: 'tcp'
    route: 'no'
  - comment: 'IRC Bouncer'
    rule: 'allow'
    port: '46697'
    proto: 'tcp'
    route: 'no'
  - comment: 'tailscale adapter'
    rule: 'allow'
    interface: tailscale0
    direction: in
    proto: 'any'
    route: 'no'

# traefik
#traefik_debug_log: true
traefik_acme: true
traefik_cloudflare_proxy: true
traefik_extra_entrypoints:
  - name: irc
    port: '46697'

# certbot
certbot_install_method: snap
certbot_admin_email: "{{ cloudflare_account_email }}"
certbot_cloudlare_api_token: "{{ cloudflare_certbot_api_token }}"
certbot_certs:
  - domains:
      - "{{ public_domain_1 }}"
      - "*.{{ public_domain_1 }}"
  - domains:
      - "{{ public_domain_2 }}"
      - "*.{{ public_domain_2 }}"
    
# ZNC
znc_user: "{{ main_username }}"
znc_group: "{{ main_groupname }}"
znc_config_root: "/home/{{ main_username }}/.znc"

# ironicbadger.docker_compose_generator
global_env_vars:
  - TZ={{ ntp_timezone }}
  - PUID={{ main_uid }}
  - PGID={{ main_gid }}
appdata_path: "/home/{{ main_username }}/appdata"
container_config_path: /config

container_networks:
  ###
  - network_name: traefik
    active: true
    external: true

containers:
  ###
  - service_name: traefik
    active: true
    image: traefik:v3.2.3
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
      - CF_DNS_API_TOKEN={{ cloudflare_traefik_api_token }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - /etc/traefik/config.d:/etc/traefik/config.d:ro
      - /etc/traefik/acme.json:/etc/traefik/acme.json
      - /var/log/traefik:/var/log/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
      - 46697:46697
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.traefik.rule=Host(`traefik-dashboard.{{ public_domain_1 }}`)"'
      - '"traefik.http.routers.traefik.entrypoints=web"'
      - '"traefik.http.middlewares.traefik-auth.basicauth.users={{ traefik_dashboard_auth }}"'
      - '"traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"'
      - '"traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"'
      - '"traefik.http.routers.traefik.middlewares=traefik-https-redirect"'
      - '"traefik.http.routers.traefik-secure.entrypoints=websecure"'
      - '"traefik.http.routers.traefik-secure.rule=Host(`traefik-dashboard.{{ public_domain_1 }}`)"'
      - '"traefik.http.routers.traefik-secure.middlewares=traefik-auth"'
      - '"traefik.http.routers.traefik-secure.tls=true"'
      - '"traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.traefik-secure.tls.domains[0].main={{ public_domain_1 }}"'
      - '"traefik.http.routers.traefik-secure.tls.domains[0].sans=*.{{ public_domain_1 }}"'
      - '"traefik.http.routers.traefik-secure.tls.domains[1].main={{ public_domain_2 }}"'
      - '"traefik.http.routers.traefik-secure.tls.domains[1].sans=*.{{ public_domain_2 }}"'
      - '"traefik.http.routers.traefik-secure.service=api@internal"'
  ###
  - service_name: glenn-blog
    active: true
    image: ghost:5.101.3-alpine
    container_name: glenn-blog
    include_global_env_vars: false
    environment:
      - "TZ=America/New_York"
      - NODE_ENV=production
      - database__client=mysql
      - database__connection__host=glenn-blog-db
      - "database__connection__user={{ glennblog_db_user }}"
      - "database__connection__password={{ glennblog_db_pass }}"
      - database__connection__database=ghost
      - "url=https://www.{{ public_domain_2 }}"
    volumes:
      - "{{ appdata_path }}/glenn-blog/content:/var/lib/ghost/content"
      - /etc/localtime:/etc/localtime:ro
    networks:
      - traefik
      - default
    depends_on:
      - glenn-blog-db
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.glennblog.rule=Host(`www.{{ public_domain_2 }}`)"'
      - '"traefik.http.routers.glennblog.entrypoints=websecure"'
      - '"traefik.http.routers.glennblog.tls=true"'
      - '"traefik.http.routers.glennblog.tls.certresolver=cloudflare"'
      - '"traekik.http.routers.glennblog.tls.domains[0].main={{ public_domain_2 }}"'
      - '"traekik.http.routers.glennblog.tls.domains[0].sans=*.{{ public_domain_2 }}"'
  ###
  - service_name: glenn-blog-db
    active: true
    image: mysql:8.4.3
    container_name: glenn-blog-db
    include_global_env_vars: false
    environment:
      - "TZ=America/New_York"
      - "MYSQL_ROOT_PASSWORD={{ mysql_root_pass }}"
    volumes:
      - "{{ appdata_path }}/glenn-blog/db:/var/lib/mysql"
    networks:
      - default
    restart: unless-stopped
  ###
  - service_name: overseerr
    active: false
    image: lscr.io/linuxserver/overseerr:1.33.2
    container_name: overseerr
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/overseerr:/config"
    networks:
      - traefik 
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.overseerr.rule=Host(`requests.{{ public_domain_1 }}`)"'
      - '"traefik.http.routers.overseerr.entrypoints=websecure"'
      - '"traefik.http.routers.overseerr.tls=true"'
      - '"traefik.http.routers.overseerr.tls.certresolver=cloudflare"'
      - '"traekik.http.routers.overseerr.tls.domains[0].main={{ public_domain_1 }}"'
      - '"traekik.http.routers.overseerr.tls.domains[0].sans=*.{{ public_domain_1 }}"'
  ###
  - service_name: freshrss
    active: true
    image: freshrss/freshrss:1.24.3-alpine
    container_name: freshrss
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
      - CRON_MIN=1,31
    volumes:
      - "{{ appdata_path }}/freshrss/data:/var/www/FreshRSS/data"
      - "{{ appdata_path }}/freshrss/extensions:/var/www/FreshRSS/extensions"
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.freshrss.rule=Host(`freshrss.{{ public_domain_1 }}`)"'
      - '"traefik.http.routers.freshrss.entrypoints=websecure"'
      - '"traefik.http.routers.freshrss.tls=true"'
      - '"traefik.http.routers.freshrss.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.freshrss.tls.domains[0].main={{ public_domain_1 }}"'
      - '"traefik.http.routers.freshrss.tls.domains[0].sans=*.{{ public_domain_1 }}"'
  ###
  - service_name: znc
    active: true
    image: znc:1.9.1
    container_name: znc
    user: "{{ main_uid }}:{{ main_gid }}"
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ~/.znc:/znc-data
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.zncweb.rule=Host(`znc.{{ public_domain_1 }}`)"'
      - '"traefik.http.routers.zncweb.entrypoints=websecure"'
      - '"traefik.http.routers.zncweb.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.zncweb.tls.domains[0].main={{ public_domain_1 }}"'
      - '"traefik.http.routers.zncweb.tls.domains[0].sans=*.{{ public_domain_1 }}"'
      - '"traefik.http.services.zncweb.loadbalancer.server.port=8080"'
      - '"traefik.tcp.routers.zncirc.rule=HostSNI(`znc.{{ public_domain_1 }}`)"'
      - '"traefik.tcp.routers.zncirc.entrypoints=irc"'
      - '"traefik.tcp.routers.zncirc.tls=true"'
      - '"traefik.tcp.routers.zncirc.tls.certresolver=cloudflare"'
      - '"traefik.tcp.routers.zncirc.tls.domains[0].main={{ public_domain_1 }}"'
      - '"traefik.tcp.routers.zncirc.tls.domains[0].sans=*.{{ public_domain_1 }}"'
      - '"traefik.tcp.services.zncirc.loadbalancer.server.port=6697"'
  ###
  - service_name: gokapi
    active: true
    image: f0rc3/gokapi:v1.9.2
    container_name: gokapi
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
    volumes:
      - "{{ appdata_path }}/gokapi/data:/app/data"
      - "{{ appdata_path }}/gokapi/config:/app/config"
    networks:
      - traefik
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.gokapi.rule=Host(`share.{{ public_domain_2 }}`)"'
      - '"traefik.http.routers.gokapi.entrypoints=websecure"'
      - '"traefik.http.routers.gokapi.tls=true"'
      - '"traefik.http.routers.gokapi.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.gokapi.tls.domains[0].main={{ public_domain_2 }}"'
      - '"traefik.http.routers.gokapi.tls.domains[0].sans=*.{{ public_domain_2 }}"'
      - '"traefik.http.services.gokapi.loadbalancer.server.port=53842"'
  - service_name: ntfy
    active: true
    image: binwiederhier/ntfy:v2.11.0
    container_name: ntfy
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
      - NTFY_BASE_URL=https://ntfy.{{ public_domain_1 }}
      - NTFY_CACHE_FILE=/var/lib/ntfy/cache.db
      - NTFY_AUTH_FILE=/var/lib/ntfy/auth.db
      - NTFY_AUTH_DEFAULT_ACCESS=deny-all
      - NTFY_BEHIND_PROXY=true
      - NTFY_ATTACHMENT_CACHE_DIR=/var/lib/ntfy/attachments
      - NTFY_ENABLE_LOGIN=true
      - NTFY_UPSTREAM_BASE_URL=https://ntfy.sh
      #- NTFY_WEB_PUSH_PUBLIC_KEY=<public_key>
      #- NTFY_WEB_PUSH_PRIVATE_KEY=<private_key>
      #- NTFY_WEB_PUSH_FILE=/var/lib/ntfy/webpush.db
      #- NTFY_WEB_PUSH_EMAIL_ADDRESS=<email>
    volumes:
      - "{{ appdata_path }}/nfty:/var/lib/ntfy"
    networks:
      - traefik
    command: serve
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.ntfy.rule=Host(`ntfy.{{ public_domain_1 }}`)"'
      - '"traefik.http.routers.ntfy.entrypoints=websecure"'
      - '"traefik.http.routers.ntfy.tls=true"'
      - '"traefik.http.routers.ntfy.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.ntfy.tls.domains[0].main={{ public_domain_1 }}"'
      - '"traefik.http.routers.ntfy.tls.domains[0].sans=*.{{ public_domain_1 }}"'