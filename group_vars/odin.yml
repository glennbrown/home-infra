---

target_os: proxmox #proxmox
set_hostname: odin

# geerlingguy.ntp
ntp_daemon: chrony
ntp_package: chrony

# Bash Aliases
bash_docker: true
bash_apt: true
bash_systemctl: true
  
# grog.package
package_list_group:
  - name: btrfs-progs
  - name: curl
  - name: diceware
  - name: fio
  - name: fwupd
  - name: hddtemp
  - name: iperf3
  - name: ffmpeg
  - name: intel-gpu-tools
  - name: intel-microcode
  - name: lm-sensors
  - name: mutt
  - name: nfs-kernel-server
  - name: nmap
  - name: nvme-cli
  - name: smartmontools
  - name: wget
  - name: xfsprogs
  - name: zfsutils-linux

# grog.group
group_list_group:
  - { name: kbrown, gid: 1001, state: present }
  - { name: prometheus, gid: 180, state: present }

# grog.user
user_list_group:
  - name: kbrown
    uid: 1001
    group: kbrown
    groups:
      - users
    append: yes
    shell: /bin/false
    comment: "Kristen Brown"
    state: present
  - name: dockeruser
    uid: 99
    group: users
    shell: /bin/bash
    append: yes
    groups: 
      - video
  - name: prometheus
    group: prometheus
    uid: 180
    shell: /usr/sbin/nologin
    home: /
    comment: "Prometheus daemon"
    append: false
    state: present

# odin
odin_main_storage_path: /mnt/storage
extra_mountpoints:
  - { path: /mnt/nvme1tb, id: /dev/disk/by-id/nvme-WDBRPG0010BNC-WRSN_21500K802847-part1, fs: ext4, opts: "defaults,discard" }
network_mountpoints:
  - { path: /mnt/media, id: //yggdrasil/Media, fs: cifs, opts: "credentials=/root/.smbcredentials,uid=99,gid=100,dir_mode=0777,file_mode=0777,_netdev" }
samba_users:
  - username: "{{ main_username }}"
    password: "{{ secret_samba_gbrown }}"
  - username: kbrown
    password: "{{ secret_samba_kbrown }}"

# ironicbadger.snapraid + odin
# snapraid_runner: true
# snapraid_install: true
# snapraid_install_mode: package_manager
# snapraid_bin_path: /usr/bin/snapraid
# snapraid_parity_disks:
#   - { path: /mnt/parity1, diskbyid: /dev/disk/by-id/ata-WDC_WD120EDAZ-11F3RA0_5PJGZA3D-part1, fs: xfs, opts: defaults, content: false }

# snapraid_data_disks:
#   - { path: /mnt/disk1, id: /dev/disk/by-id/ata-WDC_WD120EDAZ-11F3RA0_5PJGRG9D-part1, fs: xfs, opts: defaults, content: true }
#   - { path: /mnt/disk2, id: /dev/disk/by-id/ata-WDC_WD100EMAZ-00WJTA0_JEJUB8YZ-part1, fs: xfs, opts: defaults, content: false }
#   - { path: /mnt/disk3, id: /dev/disk/by-id/ata-WDC_WD100EMAZ-00WJTA0_JEK67U5N-part1, fs: xfs, opts: defaults, content: false }
#   - { path: /mnt/disk99, id: /dev/disk/by-id/ata-WDC_WD10EZEX-08WN4A0_WD-WCC6Y3RK0N3F-part1, fs: ext4, opts: defaults, content: false }

# snapraid_config_excludes:
#   - "*.unrecoverable"
#   - "/tmp/"
#   - "/lost+found/"
#   - "downloads/"
#   - "appdata/"
#   - "*.!sync"
#   - ".AppleDouble"
#   - "._AppleDouble"
#   - ".DS_Store"
#   - "._.DS_Store"
#   - ".Thumbs.db"
#   - ".fseventsd"
#   - ".Spotlight-V100"
#   - ".TemporaryItems"
#   - ".Trashes"
#   - ".AppleDB"
#   - ".nfo"

# tigattack.mergerfs
# mergerfs_install_mode: github_releases
# mergerfs_version: 2.40.2
# mergerfs_mounts:
#   - path: /mnt/storage
#     branches: 
#       - /mnt/disk*
#       - /mnt/nvme1tb
#     options: "defaults,nonempty,allow_other,use_ino,moveonenospc=true,category.create=epmfs,dropcacheonclose=true,minfreespace=250G,fsname=mergerfs"
#   - path: /mnt/jbod
#     branches:
#       - /mnt/disk*
#     options: "defaults,nonempty,allow_other,use_ino,moveonenospc=true,category.create=epmfs,dropcacheonclose=true,minfreespace=250G,fsname=jbod"

# geerlingguy.nfs
# nfs_exports: [ "/mnt/storage    *(rw,sync,no_root_squash,fsid=25)" ]

# traefik
traefik_acme: true
traefik_file_providers:
  - name: 'proxmox-rules.yml'
traefik_domains:
  - name: "{{ local_domain }}"
    sans: "*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"
  - name: "{{ public_domain_1 }}"
    sans: "*.{{ public_domain_1 }}"

#Plex Info
plex_server_address: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          33653934356539633465646339613930303938646335663139323837396334616161666166343161
          3734323933343736623139396439343039303966396338330a313439316533336466303764623162
          66623939376334363036333230323730323332393065346564386266663165346162646232633036
          3963643461353366330a373763353533333162316634323365353562316563323633326236366138
          65386366393238616230636136633732376166373466616236366561346464326330643636373230
          35626130383963666234393932666261353165316233623331333034373732366239343531613237
          35333862623535316539323863396162653134386133313536393064666461373533316530363139
          33326638633237633030
plex_claim_token: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          32336431323436303538356632316366333733653836396362666164323832383362636262613132
          3537376536613266343165313334626431326462323436350a363061656162303030323264336535
          64666630356235363133626632353061623561363264393933653466356333306537353634393731
          3163663765623539610a373830623135353534613631666137646165323935356166363431303334
          33386337373630343432323533303664356432666261343265613135653236656464
plex_auth_token: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65353466336334353332333066636137336332376636306533393665633133313963346363623239
          3038356138323935613231316133353035306234623134650a303162306166353933386130653031
          30393261303261633730636336346638326236336334373161336661326135343339633763383834
          6631333737343765340a626534346231633965363265303034313365663263623639386666653661
          36356638383932313866626664333864616662653036346635636532316135326433
          
# ironicbadger.docker_compose_generator
appdata_path: /mnt/nvme1tb/appdata
storage_path: /mnt/storage
download_path: "{{ storage_path }}/downloads"
container_config_path: /config

container_networks:
  ###
  - network_name: traefik
    active: true
    external: true

containers:
  ###
  - service_name: traefik
    active: true
    image: traefik:v3.2.1
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
      - CF_DNS_API_TOKEN={{ cloudflare_traefik_api_token }}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - /etc/traefik/config.d:/etc/traefik/config.d:ro
      - /etc/traefik/acme.json:/etc/traefik/acme.json
      - /var/log/traefik:/var/log/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
    networks:
      - traefik
      - default
    extra_hosts:
      - '"host.docker.internal:172.17.0.1"'
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.traefik.rule=Host(`traefik.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.traefik.entrypoints=web"'
      - '"traefik.http.middlewares.traefik-auth.basicauth.users={{ traefik_dashboard_auth }}"'
      - '"traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"'
      - '"traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"'
      - '"traefik.http.routers.traefik.middlewares=traefik-https-redirect"'
      - '"traefik.http.routers.traefik-secure.entrypoints=websecure"'
      - '"traefik.http.routers.traefik-secure.rule=Host(`traefik.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.traefik-secure.middlewares=traefik-auth"'
      - '"traefik.http.routers.traefik-secure.tls=true"'
      - '"traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.traefik-secure.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.traefik-secure.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
      - '"traefik.http.routers.traefik-secure.service=api@internal"'
  ###
  - service_name: plex
    active: true
    image: plexinc/pms-docker:1.41.1.9057-af5eaea7a
    container_name: plex
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
      - "PLEX_CLAIM={{ plex_claim_token }}"
      - PLEX_UID=99
      - PLEX_GID=100
    volumes:
      - "{{ appdata_path }}/plexmediaserver:{{ container_config_path }}"
      - "{{ storage_path }}/TV Shows:/tv:ro"
      - "{{ storage_path }}/Movies:/movies:ro"
    tmpfs:
      - /transcode:size=32G,mode=0777
    devices:
      - /dev/dri:/dev/dri
    network_mode: host
    restart: unless-stopped
  ###
  - service_name: tautulli
    active: true
    image: tautulli/tautulli:v2.14.6
    container_name: tautulli
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/tautulli:{{ container_config_path }}"
    networks:
      - traefik
      - default
    restart: unless-stopped
    depends_on:
      - plex
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.tautulli.rule=Host(`tautulli.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.tautulli.entrypoints=websecure"'
      - '"traefik.http.routers.tautulli.tls=true"'
      - '"traefik.http.routers.tautulli.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.tautulli.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.tautulli.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
  ###
  - service_name: sabnzbd
    active: true
    image: lscr.io/linuxserver/sabnzbd:4.3.3
    container_name: sabnzbd
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/sabnzbd:{{ container_config_path }}"
      - "{{ download_path }}:/downloads"
    networks:
      - traefik
      - default
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.sabnzbd.rule=Host(`sabnzb.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.sabnzbd.entrypoints=websecure"'
      - '"traefik.http.routers.sabnzbd.tls=true"'
      - '"traefik.http.routers.sabnzbd.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.sabnzbd.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.sabnzbd.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
  ###
  - service_name: qbittorrent
    active: true
    image: lscr.io/linuxserver/qbittorrent:4.6.7
    container_name: qbittorrent
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/qbittorrent:{{ container_config_path }}"
      - "{{ download_path }}:/downloads"
    ports:
      - 6881:6881
      - 6881:6881/udp
    networks:
      - traefik
      - default
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.qbittorrent.rule=Host(`qb.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.qbittorrent.entrypoints=websecure"'
      - '"traefik.http.routers.qbittorrent.tls=true"'
      - '"traefik.http.routers.qbittorrent.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.qbittorrent.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.qbittorrent.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
      - '"traefik.http.services.qbittorrent.loadbalancer.server.port=8080"'
  ###
  - service_name: prowlarr
    active: true
    image: lscr.io/linuxserver/prowlarr:1.25.4
    container_name: prowlarr
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/prowlarr:{{ container_config_path }}"
    networks:
      - traefik
      - default
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.prowlarr.rule=Host(`prowlarr.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.prowlarr.entrypoints=websecure"'
      - '"traefik.http.routers.prowlarr.tls=true"'
      - '"traefik.http.routers.prowlarr.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.prowlarr.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.prowlarr.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
  ###
  - service_name: sonarr
    active: true
    image: lscr.io/linuxserver/sonarr:4.0.10
    container_name: sonarr
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/sonarr:{{ container_config_path }}"
      - "{{ download_path }}:/downloads"
      - "{{ storage_path }}/TV Shows:/tv"
    networks:
      - traefik
      - default
    restart: unless-stopped
    depends_on:
      - sabnzbd
      - qbittorrent
      - prowlarr
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.sonarr.rule=Host(`sonarr.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.sonarr.entrypoints=websecure"'
      - '"traefik.http.routers.sonarr.tls=true"'
      - '"traefik.http.routers.sonarr.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.sonarr.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.sonarr.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
  ###
  - service_name: radarr
    active: true
    image: lscr.io/linuxserver/radarr:5.15.1
    container_name: radarr
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/radarr:{{ container_config_path }}"
      - "{{ download_path }}:/downloads"
      - "{{ storage_path }}/Movies:/movies"
    networks:
      - traefik
      - default
    restart: unless-stopped
    depends_on:
      - sabnzbd
      - prowlarr
      - qbittorrent
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.radarr.rule=Host(`radarr.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.radarr.entrypoints=websecure"'
      - '"traefik.http.routers.radarr.tls=true"'
      - '"traefik.http.routers.radarr.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.radarr.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.radarr.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
  ###
  - service_name: speedtest-tracker
    active: true
    image: lscr.io/linuxserver/speedtest-tracker:0.21.4
    container_name: speedtest-tracker
    include_global_env_vars: true
    environment:
      - "APP_KEY={{ speedtest_tracker_appkey }}"
      - SPEEDTEST_SCHEDULE=0,30 * * * *
      - SPEEDTEST_SERVERS=9840,58200,16071,10979
      - DISPLAY_TIMEZONE=America/New_York
      - PRUNE_RESULTS_OLDER_THAN=365
    volumes:
      - "{{ appdata_path }}/speedtest-tracker:{{ container_config_path }}"
    networks:
      - traefik
      - default
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.speedtest-tracker.rule=Host(`speedtest-tracker.{{ ansible_hostname[0] }}.{{ local_domain }}`)"'
      - '"traefik.http.routers.speedtest-tracker.tls=true"'
      - '"traefik.http.routers.speedtest-tracker.entrypoints=websecure"'
      - '"traefik.http.routers.speedtest-tracker.tls.certresolver=cloudflare"'
  ###
  - service_name: py-kms
    active: true
    image: pykmsorg/py-kms
    container_name: py-kms
    include_global_env_vars: false
    environment:
      - "TZ={{ ntp_timezone }}"
    volumes:
      - "{{ appdata_path }}/py-kms/db:/home/py-kms/db"
      - /etc/localtime:/etc/localtime
    ports:
      - 1688:1688
    networks:
      - default
    restart: unless-stopped
  ###
  - service_name: librespeed
    active: true
    image: lscr.io/linuxserver/librespeed:5.4.20240804
    container_name: librespeed
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/librespeed:{{ container_config_path }}"
    networks:
      - traefik
      - default
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.librespeed.rule=Host(`librespeed.o.{{ local_domain }}`)"'
      - '"traefik.http.routers.librespeed.entrypoints=websecure"'
      - '"traefik.http.routers.librespeed.tls=true"'
      - '"traefik.http.routers.librespeed.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.librespeed.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.librespeed.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
  ###
  - service_name: netbootxyz
    active: true
    image: lscr.io/linuxserver/netbootxyz:0.7.3
    container_name: netbootxyz
    include_global_env_vars: true
    environment:
      - PORT_RANGE=30000:30010
      - SUBFOLDER=/
    volumes:
      - "{{ appdata_path }}/netbootxyz:{{ container_config_path }}"
      - /mnt/ssd-data/netboot-assets:/assets
    networks:
      - traefik
      - default
    ports:
      - 69:69/udp
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.netbootxyz.rule=Host(`netbootxyz.{{ local_domain }}`)"'
      - '"traefik.http.routers.netbootxyz.entrypoints=websecure"'
      - '"traefik.http.routers.netbootxyz.tls=true"'
      - '"traefik.http.routers.netbootxyz.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.netbootxyz.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.netbootxyz.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
      - '"traefik.http.services.netbootxyz.loadbalancer.server.port=3000"'
  ###
  - service_name: smokeping
    active: true
    image: lscr.io/linuxserver/smokeping:2.8.2-r3-ls110
    container_name: smokeping
    include_global_env_vars: true
    volumes:
      - "{{ appdata_path }}/smokeping/config:/config"
      - "{{ appdata_path }}/smokeping/data:/data"
    networks:
      - traefik
      - default
    restart: unless-stopped
    labels:
      - '"traefik.enable=true"'
      - '"traefik.http.routers.smokeping.rule=Host(`smokeping.{{ local_domain }}`)"'
      - '"traefik.http.routers.smokeping.entrypoints=websecure"'
      - '"traefik.http.routers.smokeping.tls=true"'
      - '"traefik.http.routers.smokeping.tls.certresolver=cloudflare"'
      - '"traefik.http.routers.smokeping.tls.domains[0].main={{ local_domain }}"'
      - '"traefik.http.routers.smokeping.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
    ###
  - service_name: changedetection
    active: true
    image: ghcr.io/dgtlmoon/changedetection.io:0.47.03
    container_name: changedetection
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
      # - WEBDRIVER_URL=http://playwright-chrome:4444/wd/hub
      - PLAYWRIGHT_DRIVER_URL=ws://playwright-chrome:3000/?stealth=1&--disable-web-security=true
      - BASE_URL=https://changedetection.{{ local_domain }} # configure this for your own domain
    volumes:
      - "{{ appdata_path }}/changedetection:/datastore"
    networks:
      - traefik
      - default
    depends_on:
      - playwright-chrome
    restart: unless-stopped
    labels:
    - '"traefik.enable=true"'
    - '"traefik.http.routers.changedetection.rule=Host(`changedetection.{{ local_domain }}`)"'
    - '"traefik.http.routers.changedetection.entrypoints=websecure"'
    - '"traefik.http.routers.changedetection.tls=true"'
    - '"traefik.http.routers.changedetection.tls.certresolver=cloudflare"'
    - '"traefik.http.routers.changedetection.tls.domains[0].main={{ local_domain }}"'
    - '"traefik.http.routers.changedetection.tls.domains[0].sans=*.{{ local_domain }},*.{{ ansible_hostname[0] }}.{{ local_domain }}"'
  ###
  - service_name: playwright-chrome
    active: true
    image: browserless/chrome:1.61.1-chrome-stable
    container_name: playwright-chrome
    include_global_env_vars: false
    environment:
      - TZ={{ ntp_timezone }}
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1024
      - SCREEN_DEPTH=16
      - ENABLE_DEBUGGER=false
      - PREBOOT_CHROME=true
      - CONNECTION_TIMEOUT=300000
      - MAX_CONCURRENT_SESSIONS=10
      - CHROME_REFRESH_TIME=600000
      - DEFAULT_BLOCK_ADS=true
      - DEFAULT_STEALTH=true
      - DEFAULT_IGNORE_HTTPS_ERRORS=true
    volumes:
      - "{{ appdata_path }}/changedetection:/datastore"
    networks:
      - default
    restart: unless-stopped