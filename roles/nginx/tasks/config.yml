---

- name: Download Diffie-Hellman Parameters
  get_url:
    url: "{{ dhparams_pem_download }}"
    dest: "{{ nginx_config_dir }}/dhparams.pem"
    mode: 0440

- name: Ensure config directories exist
  file:
    path: "{{ nginx_config_dir }}"
    state: directory
    mode: 0755
  loop:
    - sites-enabled
    - conf.d

- name: Check if we already backed up stock config
  stat:
    path: "{{ nginx_config_dir }}/nginx.conf.org"
  register: debian_stock_config

- name: Copy Debian stock config
  copy:
    src: "{{ nginx_config_dir }}/nginx.conf"
    dest: "{{ nginx_config_dir }}/nginx.conf.org"
    remote_src: true
  when: not debian_stock_config.stat.exists

- name: Install nginx base config
  copy:
    src: nginx.conf
    dest: "{{ nginx_config_dir }}/nginx.conf"
    mode: 0644
  notify: reload nginx

- name: Copy proxy parameters
  copy:
    src: proxy_params
    dest: "{{ nginx_config_dir }}/proxy_params"
    mode: 0644
  notify: reload nginx

- name: Copy additional config files
  copy:
    src: "{{ item }}"
    dest: "{{ nginx_config_dir }}/{{ item }}"
    mode: 0644
  loop:
    - ssl.conf
  notify: reload nginx

- name: Disable default site
  file:
    path: "{{ nginx_config_dir }}/sites-enabled/default"
    state: absent
  notify: reload nginx

- name: Install HTTPS Redirect
  copy:
    src: nginx-https-redirect.conf
    dest: "{{ nginx_config_dir }}/sites-enabled/nginx-https-redirect.conf"
    mode: 0644
  notify: reload nginx

- name: Add managed vhost config files.
  template:
    src: "{{ item.template|default(nginx_vhost_template) }}"
    dest: "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}"
    force: true
    owner: root
    group: root
    mode: 0644
  when: item.state|default('present') != 'absent'
  with_items: "{{ nginx_vhosts }}"
  notify: reload nginx

- name: Remove managed vhost config files.
  file:
    path: "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}"
    state: absent
  when: item.state|default('present') == 'absent'
  with_items: "{{ nginx_vhosts }}"
  notify: reload nginx